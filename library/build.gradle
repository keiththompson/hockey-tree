apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionName releaseVersion

    }
    buildTypes {
        release {
            useProguard false
        }
    }
}

dependencies {
    compileOnly "com.jakewharton.timber:timber:$timber"
    compileOnly "net.hockeyapp.android:HockeySDK:$hockey"
    testImplementation "com.jakewharton.timber:timber:$timber"
    testImplementation "net.hockeyapp.android:HockeySDK:$hockey"
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:$mockito"
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('user.properties').newDataInputStream())
    user = properties.getProperty('bintray_username')
    key = properties.getProperty('bintray_key')
    publications = ['Production']
    configurations = ['archives']
    override = true
    pkg {
        repo = properties.getProperty('repo_name')
        name = 'hockey-tree'
        description = "Breadcrumbs for Hockeyapp via Timber"
        publish = true
        publicDownloadNumbers = true
        licenses = ['MIT']
        vcsUrl = 'https://github.com/keiththompson/hockey-tree.git'
        dryRun = false
        version {
            name = releaseVersion
            desc = "Breadcrumbs for Hockeyapp via Timber"
            released = new Date()
            vcsTag = releaseVersion
        }
    }
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/library.aar")
            Properties properties = new Properties()
            properties.load(project.rootProject.file('user.properties').newDataInputStream())
            groupId properties.getProperty('group_id')
            artifactId properties.getProperty('artifact_id')
            version releaseVersion
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}